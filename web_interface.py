import streamlit as st
from tika import parser
from model import DocClassifier
import pickle
from pathlib import Path
import json

with open("model3.pkl", 'rb') as f:
         cl = pickle.load(f)

@st.cache
def parse_doc(doc):
    parsed = parser.from_file(uploaded_file)
    return parsed["content"]        

def define_doc_state(doc):

    with open(doc.name,"wb") as f:
         f.write(doc.getbuffer())

    result = cl.get_dict(doc.name)
    cl.pdf_viz(doc.name)
    json_data = json.dumps(result)


    return json_data
    
st.markdown("<h1 style='text-align: center;'> –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–∏–¥–∞ –¥–æ–≥–æ–≤–æ—Ä–∞ </h1>", unsafe_allow_html=True)

uploaded_file = st.file_uploader("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª", type=["doc", "docx", "pdf", "rtf"], accept_multiple_files=False)
if uploaded_file:
    result = """
            –¢–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—É—á–µ–Ω –∏–∑-–∑–∞ —Ç–æ–≥–æ, —á—Ç–æ –í—ã –Ω–µ –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É '–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å'.
            –í–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞
             """
    st.success("–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω", icon="‚úÖ")
    define_button_state = st.button("–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å")
    if define_button_state:
        short_result = define_doc_state(uploaded_file)
        st.success("–í–∏–¥ –¥–æ–≥–æ–≤–æ—Ä–∞ —É—Å–ø–µ—à–Ω–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω", icon="‚úÖ")
        st.markdown("–ö—Ä–∞—Ç–∫–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã")
        st.json(short_result)
        result="PREDICTED"
        download_button_state = st.download_button(label="–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã", data=open("output.pdf", "rb"), file_name="output.pdf")
    


else:
     st.error("–í—ã –Ω–∏—á–µ–≥–æ –Ω–µ –≤–∞–±—Ä–∞–ª–∏", icon="üö®")

st.markdown("<h5 style='text-align: center; color: white;'> –ù–∞–≤—è–∑—á–∏–≤—ã–µ –º—ã—Å–ª–∏ </h5>", unsafe_allow_html=True)
st.markdown("<h5 style='text-align: center; color: white;'> 2022 </h5>", unsafe_allow_html=True)